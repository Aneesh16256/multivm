name: GCP VM Deployment Pipeline

on:
  push:
    branches: [main]
    tags: ['v*']

jobs:
  # ====================== DEV (Automatic) ======================
  deploy-dev:
    name: Deploy to Dev
    runs-on: ubuntu-latest
    environment: dev
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install SSH Key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.DEV_VM_SSH_KEY }}
          known_hosts: "dev"

      - name: Deploy to Dev VM
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.DEV_VM_IP }}
          username: ${{ secrets.DEV_VM_USER }}
          key: ${{ secrets.DEV_VM_SSH_KEY }}
          script: |
            if [ ! -d /var/www/app ]; then
              git clone https://github.com/${{ github.repository }} /var/www/app
            fi
            cd /var/www/app
            git pull origin main
            docker-compose down || true
            docker-compose up -d --build

  # ====================== STAGING (Manual Approval) ======================
  deploy-staging:
    name: Deploy to Staging
    needs: deploy-dev
    runs-on: ubuntu-latest
    environment: staging
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Wait for Approval
        uses: trstringer/manual-approval@v1
        with:
          secret: ${{ github.token }}
          approvers: "team-lead"

      - name: Install SSH Key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.STAGING_VM_SSH_KEY }}
          known_hosts: "staging"

      - name: Deploy to Staging VM
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.STAGING_VM_IP }}
          username: ${{ secrets.STAGING_VM_USER }}
          key: ${{ secrets.STAGING_VM_SSH_KEY }}
          script: |
            if [ ! -d /var/www/app ]; then
              git clone https://github.com/${{ github.repository }} /var/www/app
            fi
            cd /var/www/app
            git pull origin main
            docker-compose down || true
            docker-compose up -d --build

  # ====================== PROD (Manual Approval or Tag Trigger) ======================
  deploy-prod:
    name: Deploy to Production
    needs: deploy-staging
    runs-on: ubuntu-latest
    environment: prod
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v')
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Skip approval if tag exists
        if: startsWith(github.ref, 'refs/tags/v')
        run: echo "Tag deployment - skipping approval"

      - name: Wait for Approval
        if: !startsWith(github.ref, 'refs/tags/v')
        uses: trstringer/manual-approval@v1
        with:
          secret: ${{ github.token }}
          approvers: "cto"

      - name: Install SSH Key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.PROD_VM_SSH_KEY }}
          known_hosts: "prod"

      - name: Deploy to Production VM
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.PROD_VM_IP }}
          username: ${{ secrets.PROD_VM_USER }}
          key: ${{ secrets.PROD_VM_SSH_KEY }}
          script: |
            if [ ! -d /var/www/app ]; then
              git clone https://github.com/${{ github.repository }} /var/www/app
            fi
            cd /var/www/app
            git pull origin main
            docker-compose down || true
            docker-compose up -d --build
