name: GCP VM Deployment Pipeline

on:
  push:
    branches: [main]
    tags: ['v*']

# Add these permissions at the workflow level
permissions:
  issues: write
  pull-requests: write
  contents: read

jobs:
  deploy-dev:
    name: Deploy to Dev
    runs-on: ubuntu-latest
    environment: dev

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy to Dev VM
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.DEV_VM_IP }}
          username: ${{ secrets.DEV_VM_USER }}
          key: ${{ secrets.DEV_VM_SSH_KEY }}
          script: |
            WORKSPACE=~/app_$(date +%s)
            mkdir -p $WORKSPACE
            git clone https://github.com/${{ github.repository }}.git $WORKSPACE
            cd $WORKSPACE
            docker-compose down || true
            docker-compose up -d --build
            ls -td ~/app_* | tail -n +4 | xargs rm -rf

  deploy-staging:
    name: Deploy to Staging
    needs: deploy-dev
    runs-on: ubuntu-latest
    environment: staging

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Wait for Approval
        uses: trstringer/manual-approval@v1
        with:
          secret: ${{ secrets.GITHUB_TOKEN }}  # Use the secrets context
          approvers: "Aneesh16256"  # Use your username directly
          issue-title: "Approval required for Staging Deployment"
          issue-body: |
            Please review the staging deployment.
            Respond with 'approve' to continue or 'deny' to cancel.

      - name: Deploy to Staging VM
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.STAGING_VM_IP }}
          username: ${{ secrets.STAGING_VM_USER }}
          key: ${{ secrets.STAGING_VM_SSH_KEY }}
          script: |
            WORKSPACE=~/app_$(date +%s)
            mkdir -p $WORKSPACE
            git clone https://github.com/${{ github.repository }}.git $WORKSPACE
            cd $WORKSPACE
            docker-compose down || true
            docker-compose up -d --build
            ls -td ~/app_* | tail -n +4 | xargs rm -rf

  deploy-prod:
    name: Deploy to Production
    needs: deploy-staging
    runs-on: ubuntu-latest
    environment: prod
    if: ${{ github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v') }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Skip approval if tag exists
        if: ${{ startsWith(github.ref, 'refs/tags/v') }}
        run: echo "Tag deployment - skipping approval"

      - name: Wait for Approval
        if: ${{ !startsWith(github.ref, 'refs/tags/v') }}
        uses: trstringer/manual-approval@v1
        with:
          secret: ${{ secrets.GITHUB_TOKEN }}
          approvers: "Aneesh16256"  # Use your username directly
          issue-title: "Production Deployment Approval"
          issue-body: |
            PRODUCTION DEPLOYMENT REVIEW REQUIRED!
            This will deploy to live production environment.
            Respond with 'approve' to continue or 'deny' to cancel.

      - name: Deploy to Production VM
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.PROD_VM_IP }}
          username: ${{ secrets.PROD_VM_USER }}
          key: ${{ secrets.PROD_VM_SSH_KEY }}
          script: |
            WORKSPACE=~/app_$(date +%s)
            mkdir -p $WORKSPACE
            git clone https://github.com/${{ github.repository }}.git $WORKSPACE
            cd $WORKSPACE
            docker-compose down || true
            docker-compose up -d --build
            ls -td ~/app_* | tail -n +4 | xargs rm -rf
