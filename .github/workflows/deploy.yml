name: GCP VM Deployment Pipeline

on:
  push:
    branches: [main]
    tags: ['v*']

jobs:
  deploy-dev:
    name: Deploy to Dev
    runs-on: ubuntu-latest
    environment: dev

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install SSH Key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.DEV_VM_SSH_KEY }}
          known_hosts: ${{ secrets.KNOWN_HOSTS || 'placeholder' }}

      - name: Setup Deployment Directory
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.DEV_VM_IP }}
          username: ${{ secrets.DEV_VM_USER }}
          key: ${{ secrets.DEV_VM_SSH_KEY }}
          script: |
            # Setup directory with correct permissions (no sudo needed)
            mkdir -p ~/app
            if [ -d "~/app" ]; then
              rm -rf ~/app
            fi

      - name: Deploy Application
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.DEV_VM_IP }}
          username: ${{ secrets.DEV_VM_USER }}
          key: ${{ secrets.DEV_VM_SSH_KEY }}
          script: |
            # Clone repository
            git clone https://github.com/${{ github.repository }}.git ~/app
            
            # Deploy application
            cd ~/app
            docker-compose down || true
            docker-compose up -d --build

  deploy-staging:
    name: Deploy to Staging
    needs: deploy-dev
    runs-on: ubuntu-latest
    environment: staging

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Wait for Approval
        uses: trstringer/manual-approval@v1
        with:
          secret: ${{ github.token }}
          approvers: "team-lead"

      - name: Install SSH Key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.STAGING_VM_SSH_KEY }}
          known_hosts: ${{ secrets.KNOWN_HOSTS || 'placeholder' }}

      - name: Setup Deployment Directory
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.STAGING_VM_IP }}
          username: ${{ secrets.STAGING_VM_USER }}
          key: ${{ secrets.STAGING_VM_SSH_KEY }}
          script: |
            mkdir -p ~/app
            if [ -d "~/app" ]; then
              rm -rf ~/app
            fi

      - name: Deploy Application
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.STAGING_VM_IP }}
          username: ${{ secrets.STAGING_VM_USER }}
          key: ${{ secrets.STAGING_VM_SSH_KEY }}
          script: |
            git clone https://github.com/${{ github.repository }}.git ~/app
            cd ~/app
            docker-compose down || true
            docker-compose up -d --build

  deploy-prod:
    name: Deploy to Production
    needs: deploy-staging
    runs-on: ubuntu-latest
    environment: prod
    if: ${{ github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v') }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Skip approval if tag exists
        if: ${{ startsWith(github.ref, 'refs/tags/v') }}
        run: echo "Tag deployment - skipping approval"

      - name: Wait for Approval
        if: ${{ !startsWith(github.ref, 'refs/tags/v') }}
        uses: trstringer/manual-approval@v1
        with:
          secret: ${{ github.token }}
          approvers: "cto"

      - name: Install SSH Key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.PROD_VM_SSH_KEY }}
          known_hosts: ${{ secrets.KNOWN_HOSTS || 'placeholder' }}

      - name: Setup Deployment Directory
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.PROD_VM_IP }}
          username: ${{ secrets.PROD_VM_USER }}
          key: ${{ secrets.PROD_VM_SSH_KEY }}
          script: |
            mkdir -p ~/app
            if [ -d "~/app" ]; then
              rm -rf ~/app
            fi

      - name: Deploy Application
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.PROD_VM_IP }}
          username: ${{ secrets.PROD_VM_USER }}
          key: ${{ secrets.PROD_VM_SSH_KEY }}
          script: |
            git clone https://github.com/${{ github.repository }}.git ~/app
            cd ~/app
            docker-compose down || true
            docker-compose up -d --build
